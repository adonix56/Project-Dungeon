//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Settings/InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControls"",
    ""maps"": [
        {
            ""name"": ""PlayerFarm"",
            ""id"": ""fc760a9f-3396-4bee-ba80-74243840651c"",
            ""actions"": [
                {
                    ""name"": ""FirstContact"",
                    ""type"": ""Button"",
                    ""id"": ""554d1912-4cdb-424f-9a1c-431d7b362466"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FirstPosition"",
                    ""type"": ""Value"",
                    ""id"": ""f9c557a2-b91b-415d-b4b1-1e13672aba70"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondContact"",
                    ""type"": ""Button"",
                    ""id"": ""e5f0da99-c975-46f7-a1cd-c2f438d517a3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondPosition"",
                    ""type"": ""Value"",
                    ""id"": ""9064ec9d-1d3e-462a-bc97-3d0a15905ae9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""d3ccf556-fdef-42b9-84df-ba5ed7d101a2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHold"",
                    ""type"": ""Button"",
                    ""id"": ""7bb748d1-d40f-4a6b-8147-8f48c373a9aa"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f9b02116-ccf8-4e8f-9b7e-c6ba51533c41"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9174b93-ad5a-4c32-9561-1998aac647dd"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""839134b8-0709-42ed-8ea0-42e8b5b5711e"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be2fe76b-6da4-4ed8-a978-5542a8f0af02"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c502d906-317b-4af9-97a8-c32d1d7c5f51"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89bb9e97-bba0-4e01-9f6d-738f3c642ccb"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerFarm
        m_PlayerFarm = asset.FindActionMap("PlayerFarm", throwIfNotFound: true);
        m_PlayerFarm_FirstContact = m_PlayerFarm.FindAction("FirstContact", throwIfNotFound: true);
        m_PlayerFarm_FirstPosition = m_PlayerFarm.FindAction("FirstPosition", throwIfNotFound: true);
        m_PlayerFarm_SecondContact = m_PlayerFarm.FindAction("SecondContact", throwIfNotFound: true);
        m_PlayerFarm_SecondPosition = m_PlayerFarm.FindAction("SecondPosition", throwIfNotFound: true);
        m_PlayerFarm_Select = m_PlayerFarm.FindAction("Select", throwIfNotFound: true);
        m_PlayerFarm_SelectHold = m_PlayerFarm.FindAction("SelectHold", throwIfNotFound: true);
    }

    ~@InputControls()
    {
        UnityEngine.Debug.Assert(!m_PlayerFarm.enabled, "This will cause a leak and performance issues, InputControls.PlayerFarm.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerFarm
    private readonly InputActionMap m_PlayerFarm;
    private List<IPlayerFarmActions> m_PlayerFarmActionsCallbackInterfaces = new List<IPlayerFarmActions>();
    private readonly InputAction m_PlayerFarm_FirstContact;
    private readonly InputAction m_PlayerFarm_FirstPosition;
    private readonly InputAction m_PlayerFarm_SecondContact;
    private readonly InputAction m_PlayerFarm_SecondPosition;
    private readonly InputAction m_PlayerFarm_Select;
    private readonly InputAction m_PlayerFarm_SelectHold;
    public struct PlayerFarmActions
    {
        private @InputControls m_Wrapper;
        public PlayerFarmActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @FirstContact => m_Wrapper.m_PlayerFarm_FirstContact;
        public InputAction @FirstPosition => m_Wrapper.m_PlayerFarm_FirstPosition;
        public InputAction @SecondContact => m_Wrapper.m_PlayerFarm_SecondContact;
        public InputAction @SecondPosition => m_Wrapper.m_PlayerFarm_SecondPosition;
        public InputAction @Select => m_Wrapper.m_PlayerFarm_Select;
        public InputAction @SelectHold => m_Wrapper.m_PlayerFarm_SelectHold;
        public InputActionMap Get() { return m_Wrapper.m_PlayerFarm; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerFarmActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerFarmActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerFarmActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerFarmActionsCallbackInterfaces.Add(instance);
            @FirstContact.started += instance.OnFirstContact;
            @FirstContact.performed += instance.OnFirstContact;
            @FirstContact.canceled += instance.OnFirstContact;
            @FirstPosition.started += instance.OnFirstPosition;
            @FirstPosition.performed += instance.OnFirstPosition;
            @FirstPosition.canceled += instance.OnFirstPosition;
            @SecondContact.started += instance.OnSecondContact;
            @SecondContact.performed += instance.OnSecondContact;
            @SecondContact.canceled += instance.OnSecondContact;
            @SecondPosition.started += instance.OnSecondPosition;
            @SecondPosition.performed += instance.OnSecondPosition;
            @SecondPosition.canceled += instance.OnSecondPosition;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @SelectHold.started += instance.OnSelectHold;
            @SelectHold.performed += instance.OnSelectHold;
            @SelectHold.canceled += instance.OnSelectHold;
        }

        private void UnregisterCallbacks(IPlayerFarmActions instance)
        {
            @FirstContact.started -= instance.OnFirstContact;
            @FirstContact.performed -= instance.OnFirstContact;
            @FirstContact.canceled -= instance.OnFirstContact;
            @FirstPosition.started -= instance.OnFirstPosition;
            @FirstPosition.performed -= instance.OnFirstPosition;
            @FirstPosition.canceled -= instance.OnFirstPosition;
            @SecondContact.started -= instance.OnSecondContact;
            @SecondContact.performed -= instance.OnSecondContact;
            @SecondContact.canceled -= instance.OnSecondContact;
            @SecondPosition.started -= instance.OnSecondPosition;
            @SecondPosition.performed -= instance.OnSecondPosition;
            @SecondPosition.canceled -= instance.OnSecondPosition;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @SelectHold.started -= instance.OnSelectHold;
            @SelectHold.performed -= instance.OnSelectHold;
            @SelectHold.canceled -= instance.OnSelectHold;
        }

        public void RemoveCallbacks(IPlayerFarmActions instance)
        {
            if (m_Wrapper.m_PlayerFarmActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerFarmActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerFarmActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerFarmActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerFarmActions @PlayerFarm => new PlayerFarmActions(this);
    public interface IPlayerFarmActions
    {
        void OnFirstContact(InputAction.CallbackContext context);
        void OnFirstPosition(InputAction.CallbackContext context);
        void OnSecondContact(InputAction.CallbackContext context);
        void OnSecondPosition(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectHold(InputAction.CallbackContext context);
    }
}
